# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/CODE_OF_CONDUCT.md'
      - '.github/CODING_CONVENTIONS.md'
      - '.github/CONTRIBUTING.md'
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/SECURITY.md'
      - 'docs/**'
      - 'examples/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
      - 'LICENSE'
      - 'NOTICE'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci up -d --wait
      - name: Install BaSyx
        run: mvn clean install
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
      - name: Build and remove Docker images
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelservice.example"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelrepository.component"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasrepository.component"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasenvironment.component"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.conceptdescriptionrepository.component"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasdiscoveryservice.component"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasxfileserver.component"
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-kafka-mem"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-kafka-mongodb"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-log-mem"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-log-mongodb"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-kafka-mem"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-kafka-mongodb"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-log-mem"
          docker rmi -f $(docker images -aq)
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-log-mongodb"

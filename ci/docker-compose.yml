version: "3.9"
services:
  mongo:
    image: mongo:5.0.10
    # Provide mongo config
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    # Set health checks to wait until mongo has started
    healthcheck:
      test: mongo
      interval: 10s
      start_period: 5s
      retries: 5
    # Maps tcp port to host
    ports:
      - 27017:27017
    networks:
      - basyx-java-server-sdk

  akhq:
    image: tchiotludo/akhq:0.24.0
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29093"
    ports:
      - 8086:8080
    restart: always
    depends_on:
      - kafka
    networks:
      - basyx-java-server-sdk

  kafka:
    image: confluentinc/cp-kafka:7.8.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"  
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTER_BROKER://kafka:9094,PLAINTEXT://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTER_BROKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: INTER_BROKER://:9094,CONTROLLER://:9095,PLAINTEXT://:9093,EXTERNAL://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTER_BROKER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9095
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      CLUSTER_ID: jmpccZs2RHaYUbZ-LgaIhQ
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/kafka/9093"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 15s
    networks:
      - basyx-java-server-sdk

  
  aas-registry-log-mem:
    image: eclipsebasyx/aas-registry-log-mem:$BASYX_VERSION
    container_name: aas-registry-log-mem
    ports:
      - "8050:8080"
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
    restart: always
    networks:
      - basyx-java-server-sdk
  
  sm-registry-log-mem:
    image: eclipsebasyx/submodel-registry-log-mem:$BASYX_VERSION
    container_name: sm-registry-log-mem
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
    ports:
      - "8060:8080"
    restart: always
    networks:
      - basyx-java-server-sdk
  
  secured-aas-registry-log-mem:
    image: eclipsebasyx/aas-registry-log-mem:$BASYX_VERSION
    container_name: secured-aas-registry-log-mem
    ports:
      - "8051:8080"
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: true
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak-fixed:8080/realms/BaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
      - ./keycloak/rules/rbac_rules-aas-registry.json:/rbac/rbac_rules.json:ro
    restart: always
    networks:
      - basyx-java-server-sdk
  
  secured-sm-registry-log-mem:
    image: eclipsebasyx/submodel-registry-log-mem:$BASYX_VERSION
    container_name: secured-sm-registry-log-mem
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: true
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak-fixed:8080/realms/BaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
      - ./keycloak/rules/rbac_rules-sm-registry.json:/rbac/rbac_rules.json:ro
    ports:
      - "8061:8080"
    restart: always
    networks:
      - basyx-java-server-sdk

  configuration-sm-repo:
    image: eclipsebasyx/submodel-repository:$BASYX_VERSION
    container_name: configuration-sm-repo
    ports:
      - "8055:8081"
    volumes:
      - ./rules/sm-repo-rbac_rules.json:/application/rbac_rules.json
      - ./rules/sm-repo.properties:/application/application.properties
    restart: always
    networks:
      - basyx-java-server-sdk

  keycloak:
      build:
        context: ./keycloak
      volumes:
        - ./keycloak/realm:/opt/jboss/keycloak/imports
      ports:
        - 9096:8080
      environment:
        - KEYCLOAK_ADMIN=admin
        - KEYCLOAK_ADMIN_PASSWORD=admin
      networks:
        - basyx-java-server-sdk

  keycloak-fixed-uri:
    image: eclipsebasyx/keycloak:0.0.1
    build:
      context: ./keycloak
      dockerfile: Dockerfile.keycloak
    container_name: keycloak-fixed
    environment:
      KC_HOSTNAME: localhost
      KC_SPI_INITIALIZER_ISSUER_BASE_URI: http://keycloak-fixed:8080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: keycloak-admin
    command: ["start-dev", "--import-realm"]
    ports:
      - 9097:8080
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import:ro
    networks:
      - basyx-java-server-sdk

networks:
  basyx-java-server-sdk:
    name: basyx-java-server-sdk
    driver: bridge

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.eclipse.digitaltwin.basyx</groupId>
		<artifactId>basyx.submodelrepository</artifactId>
		<version>${revision}</version>
	</parent>

	<artifactId>basyx.submodelrepository.component</artifactId>
	
	<properties>
		<docker.image.name>submodel-repository</docker.image.name>
		<docker.container.waitForEndpoint>http://localhost:${docker.host.port}/submodels</docker.container.waitForEndpoint>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelservice-backend-inmemory</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-backend-inmemory</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-backend-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-feature-mqtt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-http</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelservice-core</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-http</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.submodelrepository-tck</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.digitaltwin.basyx</groupId>
			<artifactId>basyx.http</artifactId>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents.client5</groupId>
			<artifactId>httpclient5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>exec</classifier>
				</configuration>
			</plugin>
		</plugins>
		
		<pluginManagement>
			<plugins>
				<!-- Build the docker image -->
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.43.0</version>
					<configuration>
						<images>
							<image>
								<name>${docker.username}/${docker.image.name}</name>
								<build>
									<tags>
										<tag>${docker.image.tag}</tag>
									</tags>
									<contextDir>${project.basedir}</contextDir>
								</build>
								<run>
									<ports>
										<port>${docker.host.port}:${docker.container.port}</port>
									</ports>
									<wait>
										<url>${docker.container.waitForEndpoint}</url>
										<time>60000</time>
									</wait>
								</run>
							</image>
						</images>
						<verbose>true</verbose>
					</configuration>
					<executions>
						<execution>
							<id>docker:build</id>
							<phase>package</phase>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-compose-up</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>start</goal>
							</goals>
						</execution>
						<execution>
							<id>docker-compose-down</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>stop</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
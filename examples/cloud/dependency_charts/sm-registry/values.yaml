imagePullSecrets: []

image: 
  # Possible current options:
  # - eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT
  # - eclipsebasyx/submodel-registry-kafka-mongodb:2.0.0-SNAPSHOT - Storage - MongoDB - Event-sink- Kafka
  # - eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT - Storage - MongoDB - Event-sink- Logging (Pod)
  # - eclipsebasyx/submodel-registry-kafka-mem:2.0.0-SNAPSHOT - Storage - In-memory - Event-sink- Kafka
  # - eclipsebasyx/submodel-registry-log-mem:2.0.0-SNAPSHOT - Storage - In-memory - Event-sink- Logging (Pod)

  # If Kafka is used, then the appropriate Bootstrap connection string must be provided.
  # If Mongo is used, then the appropriate MongoDB connection string must be provided.
  name: eclipsebasyx/submodel-registry-log-mongodb:2.0.0-SNAPSHOT
  pullPolicy: IfNotPresent

resources: {}
podAnnotations: {}

kafka:
  connectionString: null
mongodb:
  connectionString: null

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  host: sm-registry.local

# Content of application.properties
config: |
  spring.application.name=AAS Submodel Registry

  logging.level.root=DEBUG

  basyx.cors.allowed-origins="*"
  basyx.cors.allowed-methods="GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD"

apirule:
  enabled: false
  host: sm-registry.local
  methods: 
      - "GET" 
      - "HEAD" 
      - "POST" 
      - "PUT" 
      - "DELETE" 
      - "CONNECT" 
      - "OPTIONS" 
      - "TRACE"
      - "PATCH"
  # -- Allows configuring CORS headers sent with the response. If corsPolicy is not defined, the CORS headers are enforced to be empty.
  corsPolicy: 
    allowMethods:
    - POST
    - GET
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
    - HEAD
    allowOrigins:
      - regex: ".*" # allow all origins
    allowCredentials: true


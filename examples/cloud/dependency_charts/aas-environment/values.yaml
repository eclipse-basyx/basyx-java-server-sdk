
imagePullSecrets: []

image: 
  name: eclipsebasyx/aas-environment:2.0.0-SNAPSHOT
  pullPolicy: IfNotPresent

resources: {}
podAnnotations: {}

service:
  type: ClusterIP
  port: 8080

startup:
  enabled: false
  # Currently supporting a GitRepo source for startup AAS shells, but must be a public repo.
  repo: ""
  # Other sources may be defined later.

ingress:
  enabled: false
  host: aas-environment.local

apirule:
  enabled: false
  host: aas-environment.local
  methods: 
      - "GET" 
      - "HEAD" 
      - "POST" 
      - "PUT" 
      - "DELETE" 
      - "CONNECT" 
      - "OPTIONS" 
      - "TRACE"
      - "PATCH"
  # -- Allows configuring CORS headers sent with the response. If corsPolicy is not defined, the CORS headers are enforced to be empty.
  corsPolicy: 
    allowMethods:
    - POST
    - GET
    - PUT
    - DELETE
    - PATCH
    - OPTIONS
    - HEAD
    allowOrigins:
      - regex: ".*" # allow all origins
    allowCredentials: true

config: |
  basyx.backend = MongoDB
  spring.data.mongodb.host=mongo
  spring.data.mongodb.database=aas-env
  spring.data.mongodb.authentication-database=admin
  spring.data.mongodb.username=mongoAdmin
  spring.data.mongodb.password=mongoPassword

  basyx.environment=file:aas
  basyx.aasrepository.feature.mqtt.enabled = true
  basyx.cors.allowed-origins=*

  mqtt.clientId=AAS-Env-Example-8081
  mqtt.hostname = mqtt
  mqtt.port = 1884

  basyx.feature.authorization.enabled = true
  basyx.feature.authorization.type = rbac
  basyx.feature.authorization.jwtBearerTokenProvider = keycloak
  basyx.feature.authorization.rbac.file = file:/application/rbac_rules.json
  spring.security.oauth2.resourceserver.jwt.issuer-uri= http://keycloak.basyx.local:8080/realms/BaSyx
